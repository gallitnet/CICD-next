name: Deploy environment

on: 
  workflow_call:
    inputs:
      project:
        required: true
        type: string
    secrets:
      cluster_name:
        required: true
      git_token:
        required: true
      projectid:
        required: true
      git_user:
        required: true
      sacreds:
        required: true
      owner:
        required: true
      address:
        required: true
      
jobs:
  build:
    runs-on: ubuntu-latest
    name: Add application to ArgoCD
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: ${{secrets.owner}}/CICD-next
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.sacreds}}
      - name: Authencticate with SA CREDENTIALS 
        uses: google-github-actions/setup-gcloud@main 
        with:
          project_id: ${{ secrets.projectid }}
          export_default_credentials: true 
      - name: Setup docker 
        run: gcloud auth configure-docker --quiet
      - name: Deploy on Production
        uses: ./.github/actions/Deployment
        id: app
        with:
          clustername: ${{ secrets.cluster_name }}
          token: ${{ secrets.git_token}}
          username: ${{ secrets.git_user }}
          projectid: ${{ secrets.projectid}}
          project: ${{ inputs.project }}
          saccount: ${{ secrets.sacreds }}
          owner: ${{ secrets.owner }}
      - name: Deploy on stage
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: stage.yml
          directory: ./.github/actions/Deployment/ansible/
          key: ${{secrets.SSH_KEY}}
          inventory: |
            [stage]
              ${{ secrets.address }} ansible_ssh_user=ansible
          options: |
            --extra-vars "project=${{ github.event.repository.name }}"  
            --extra-vars "gituser=${{ secrets.git_user }}" 
            --extra-vars "gittoken=${{ secrets.git_token}}"
            --extra-vars "process=stage"
            --extra-vars "owner=${{ secrets.owner }}"